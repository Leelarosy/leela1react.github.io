{"version":3,"sources":["logo.svg","components/login/login.jsx","components/header/header.jsx","components/pages/frontpage.jsx","components/register/register.jsx","components/main/main.jsx","components/footer/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","state","ename","pass","loginlist","handleChange","bind","handleChangePass","handleSubmit","event","this","setState","target","value","data","map","user","i","username","password","history","push","end","className","id","onSubmit","placeholder","type","onChange","Component","Header","addClass","window","location","pathname","isBoxVisible","href","onClick","toggle","Frontpage","Register","email","epass","nameChange","mailChange","passwordChange","registerSubmit","require","axios","method","url","then","response","status","alert","resetForm","Main","exact","path","component","Footer","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1f19550.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport FloatingLabel from \"floating-label-react\";\r\nimport \"floating-label-react/styles.css\";\r\nimport '../login/login.css';\r\nimport data from '../main/login.json';\r\nimport { browserHistory } from 'react-router'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ename: '', pass: '', loginlist: [] }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangePass = this.handleChangePass.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n   handleChange(event) {\r\n        this.setState({ ename: event.target.value });\r\n    }\r\n    handleChangePass(event) {\r\n        this.setState({ pass: event.target.value });\r\n    }\r\n    handleSubmit(event) {\r\n\r\n       data.map((user, i) => {\r\n          \r\n               if(user.username == this.state.ename || user.password == this.state.pass){\r\n                this.props.history.push('/')\r\n                i.end();\r\n               }  \r\n               this.props.history.push('/login');\r\n         })\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"min-vh-100\" id=\"login\">               \r\n             <div id=\"loginForm\">\r\n                   <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                <FloatingLabel\r\n                        id=\"name\"\r\n                      \r\n                        placeholder=\"Name\"\r\n                        type=\"text\"\r\n                        value={this.state.ename}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <FloatingLabel\r\n                        id=\"password\"\r\n                       \r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        value={this.state.pass}\r\n                        onChange={this.handleChangePass}\r\n                    />\r\n                    {/* <lable>\r\n                        <input type=\"text\" value={this.state.ename} placeholder=\"Name\" />\r\n                    </lable>\r\n                    <lable>\r\n                        <input type=\"text\" value={this.state.email} onChange={this.handleChangeEmail} placeholder=\"Email\" />\r\n                    </lable> */}\r\n                    {/* <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary submit\" /> */}\r\n                    <button type=\"submit\" className=\"submit\">Submit</button>\r\n                </form>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login; ","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n \r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n             addClass: false\r\n        }\r\n        \r\n    }\r\n\r\n    toggle() {\r\n        // alert('tt');\r\n        this.setState({addClass: !this.state.addClass});\r\n      }\r\n    render() {\r\n        if (window.location.pathname === '/login' || window.location.pathname === '/register') return null;\r\n        const { isBoxVisible } = this.state;\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar fixed-top navbar-expand-sm navbar-light bg-light\">\r\n                    <a className=\"navbar-brand\" href=\"#\" >Responsive navbar</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" onClick={this.toggle.bind(this)}>â˜°</button>\r\n                    <div className={this.state.addClass ? \"collapse navbar-collapse show\" : \"collapse navbar-collapse\"}  id=\"navbar-collapse\">\r\n                        <ul className=\"nav navbar-nav ml-auto\">\r\n                            <li className=\"nav-item active\"> <a className=\"nav-link\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"#\">Link 1</a>\r\n                            </li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"#\">Link 2</a>\r\n                            </li>\r\n                            <li className=\"nav-item\"> <a className=\"nav-link\" href=\"#\">Link 3</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                \r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component} from 'react';\r\n\r\nclass Frontpage extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"frontpage\">\r\n                <h1>My First Project</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Frontpage;","import React, { Component } from 'react';\r\nimport '../register/register.css';\r\nimport FloatingLabel from \"floating-label-react\";\r\nimport data from '../main/login.json';\r\nimport \"floating-label-react/styles.css\";\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            ename: '',\r\n            epass: ''\r\n        }\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.mailChange = this.mailChange.bind(this);\r\n        this.passwordChange = this.passwordChange.bind(this);\r\n        this.registerSubmit = this.registerSubmit.bind(this);\r\n    }\r\n\r\n    nameChange(event) {\r\n        this.setState({ ename: event.target.value });\r\n    }\r\n    mailChange(event) {\r\n        this.setState({ email: event.target.value });\r\n    }\r\n    passwordChange(event) {\r\n        this.setState({ epass: event.target.value });\r\n    }\r\n\r\n    registerSubmit(event) {\r\n        const axios = require('axios');\r\n       // e.preventDefault();\r\n        axios({\r\n          method: \"POST\", \r\n          url:\"http://localhost:3002/send\", \r\n          data:  this.state\r\n        }).then((response)=>{\r\n          if (response.data.status === 'success'){\r\n            alert(\"Message Sent.\"); \r\n            this.resetForm()\r\n          }else if(response.data.status === 'fail'){\r\n            alert(\"Message failed to send.\")\r\n          }\r\n        })\r\n    }\r\n    resetForm(){\r\n    \r\n        this.setState({email: '', ename: '', epass: ''});\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"min-vh-100\" id=\"register\">\r\n                <div id=\"registerForm\">\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={this.registerSubmit}>\r\n                        <FloatingLabel\r\n                            id=\"name\"\r\n                            placeholder=\"Name\"\r\n                            type=\"text\"\r\n                            value={this.state.ename}\r\n                            onChange={this.nameChange}\r\n                        />\r\n                        <FloatingLabel\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            value={this.state.email}\r\n                            onChange={this.mailChange}\r\n                        />\r\n                        <FloatingLabel\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            value={this.state.epass}\r\n                            onChange={this.passwordChange}\r\n                        />\r\n\r\n                        <button type=\"submit\" className=\"submit\">Submit</button>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Register;","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport Login from '../login/login';\r\nimport Header from '../header/header';\r\nimport Frontpage from '../pages/frontpage';\r\nimport Register from '../register/register';\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Frontpage}></Route>\r\n            <Route exact path=\"/login\" component={Login}></Route>\r\n            <Route exact path=\"/register\" component={Register}></Route>\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component{\r\n  render(){\r\n    if (window.location.pathname === '/login' || window.location.pathname === '/register') return null;\r\n      return(\r\n        <footer>\r\n          <h1>Footer</h1>\r\n          </footer>\r\n      );\r\n  }\r\n}\r\nexport default Footer; ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main/main';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nimport './components/main/main.css';\n \nfunction App() {\n  return (\n    <div className=\"App\">   \n\n       <Header></Header>\n       <Main></Main>\n       <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}